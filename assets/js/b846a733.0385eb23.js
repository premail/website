"use strict";(self.webpackChunkPremail_dev=self.webpackChunkPremail_dev||[]).push([[9232],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return d}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var m=t.createContext({}),c=function(e){var n=t.useContext(m),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=c(e.components);return t.createElement(m.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,f=u["".concat(m,".").concat(d)]||u[d]||p[d]||o;return r?t.createElement(f,a(a({ref:n},s),{},{components:r})):t.createElement(f,a({ref:n},s))}));function d(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=u;var l={};for(var m in n)hasOwnProperty.call(n,m)&&(l[m]=n[m]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5260:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return m},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var t=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],l={title:"The premail command",slug:"premail-command"},m=void 0,c={unversionedId:"overview/usage/premail-command",id:"overview/usage/premail-command",title:"The premail command",description:"Run premail -h to see all commands and options:",source:"@site/docs/01-overview/03-usage/01-premail-command.md",sourceDirName:"01-overview/03-usage",slug:"/overview/usage/premail-command",permalink:"/docs/overview/usage/premail-command",editUrl:"https://github.com/premail/website/tree/main/docs/01-overview/03-usage/01-premail-command.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"The premail command",slug:"premail-command"},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/docs/overview/setting-up-premail"},next:{title:"Create a new project",permalink:"/docs/overview/usage/create-new-premail-project"}},s=[],p={toc:s};function u(e){var n=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"premail -h")," to see all commands and options:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Usage: premail <command> [options]\n\nCommands:\n  premail new <email|design> <dest>  Create a new email or design in <dest>\n  premail build                      Build an email\n  premail watch                      Watch design and configuration files and\n                                     rebuild as necessary\n  premail clean                      Remove generated files from the current\n                                     design or email\n  premail paths                      List paths being used with the current\n                                     configuration and command-line flags\n  premail format                     Format templates with Prettier\n  premail init                       Initialize a Premail project\n  premail destroy                    Destroy this Premail project\n\nEmail development:\n  -d, --design    Specify design directory to use [string] [default: "_default"]\n  -e, --email     Specify email directory to use                        [string]\n  -p, --prod      Render production files (minified, no comments)      [boolean]\n  -s, --noserve   Disable serving rendered email via browserSync       [boolean]\n  -f, --noformat  Disable auto-formatting of files using Prettier      [boolean]\n      --debug     Append to any command to see verbose details         [boolean]\n\nDesign development:\n      --temp  Include intermediate rendered template (post-Handlebars, pre-MJML)\n              in output                                                [boolean]\n\nNew emails and designs:\n  -d, --design  Specify design directory to use   [string] [default: "_default"]\n  -e, --email   Specify email directory to use                          [string]\n\nMore information:\n  -v, --version  Show version number                                   [boolean]\n  -h, --help     Show help                                             [boolean]\n\nAdditional documentation: https://premail.dev\n')))}u.isMDXComponent=!0}}]);